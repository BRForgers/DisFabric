plugins {
    id 'fabric-loom' version '1.0.+'
    id 'maven-publish'
    id 'project-report'
}

sourceCompatibility = JavaVersion.VERSION_18
targetCompatibility = JavaVersion.VERSION_18

archivesBaseName = project.archives_base_name+"-"+project.minecraft_version
version = project.mod_version
group = project.maven_group

repositories {
    jcenter()
    mavenCentral()
    maven {
        name = "Fabric"
        url = "https://maven.fabricmc.net/"
    }
    maven {
        name 'm2-dv8tion'
        url 'https://m2.dv8tion.net/releases'
    }
    maven { url "https://maven.shedaniel.me/" }
}

dependencies {

    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    include(modImplementation ("net.dv8tion:JDA:5.0.0-alpha.20") {
        exclude module: 'opus-java'
    })
    include(modApi("me.sargunvohra.mcmods:autoconfig1u:3.4.0")) {
        exclude group: "net.fabricmc.fabric-api", module: "fabric-api"
    }
    include(modApi("me.shedaniel.cloth:cloth-config-fabric:9.0.94")) {
        exclude group: "net.fabricmc.fabric-api", module: "fabric-api"
    }
    include(modImplementation ("com.konghq:unirest-java:3.13.4:standalone")){
        exclude group: "com.google.code.gson", module: "gson"
        exclude group: "org.apache.httpcomponents", module: "httpclient"
        exclude group: "commons-logging", module: "commons-logging"
    }
    //include(modImplementation (group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.9.1'))

    //include group: 'org.json', name: 'json', version: '20160212'
    //include group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.5.2'
    //include group: 'org.apache.httpcomponents', name: 'httpasyncclient', version: '4.1.1'
    //include group: 'org.apache.httpcomponents', name: 'httpcore-nio', version: '4.4.4'
    //include group: 'org.apache.httpcomponents', name: 'httpcore', version: '4.4.4'
    //include group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.2'
    include "com.fasterxml.jackson.core:jackson-databind:2.13.1"
    include "net.sf.trove4j:trove4j:3.0.3"
    include "org.apache.commons:commons-collections4:4.1"
    include "com.google.code.findbugs:jsr305:3.0.2"
    include "org.jetbrains:annotations:16.0.1"
    //include "org.slf4j:slf4j-api:1.7.25"
    include "com.neovisionaries:nv-websocket-client:2.10"
    include "com.squareup.okhttp3:okhttp:3.13.0"
    //include "commons-logging:commons-logging:1.2"
    //include "commons-codec:commons-codec:1.9"
    include "com.fasterxml.jackson.core:jackson-annotations:2.13.1"
    include "com.fasterxml.jackson.core:jackson-core:2.13.1"
    include "com.squareup.okio:okio:1.17.2"
    include "com.neovisionaries:nv-websocket-client:2.14"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile) {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"

    // Minecraft 1.17 (21w19a) upwards uses Java 16.
    it.options.release = 16
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}
